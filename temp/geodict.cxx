//
// File generated by rootcint at Mon Aug 17 22:58:12 2009

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "geodict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void BIGCALGeometryCalculator_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void BIGCALGeometryCalculator_Dictionary();
   static void *new_BIGCALGeometryCalculator(void *p = 0);
   static void *newArray_BIGCALGeometryCalculator(Long_t size, void *p);
   static void delete_BIGCALGeometryCalculator(void *p);
   static void deleteArray_BIGCALGeometryCalculator(void *p);
   static void destruct_BIGCALGeometryCalculator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BIGCALGeometryCalculator*)
   {
      ::BIGCALGeometryCalculator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BIGCALGeometryCalculator),0);
      static ::ROOT::TGenericClassInfo
      instance("BIGCALGeometryCalculator", "BIGCALGeometryCalculator.hh", 10,
               typeid(::BIGCALGeometryCalculator), DefineBehavior(ptr, ptr),
               0, &BIGCALGeometryCalculator_Dictionary, isa_proxy, 0,
               sizeof(::BIGCALGeometryCalculator) );
      instance.SetNew(&new_BIGCALGeometryCalculator);
      instance.SetNewArray(&newArray_BIGCALGeometryCalculator);
      instance.SetDelete(&delete_BIGCALGeometryCalculator);
      instance.SetDeleteArray(&deleteArray_BIGCALGeometryCalculator);
      instance.SetDestructor(&destruct_BIGCALGeometryCalculator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BIGCALGeometryCalculator*)
   {
      return GenerateInitInstanceLocal((::BIGCALGeometryCalculator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BIGCALGeometryCalculator*)0x0);
   R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BIGCALGeometryCalculator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::BIGCALGeometryCalculator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_BIGCALGeometryCalculator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BIGCALGeometryCalculator : new ::BIGCALGeometryCalculator;
   }
   static void *newArray_BIGCALGeometryCalculator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BIGCALGeometryCalculator[nElements] : new ::BIGCALGeometryCalculator[nElements];
   }
   // Wrapper around operator delete
   static void delete_BIGCALGeometryCalculator(void *p) {
      delete ((::BIGCALGeometryCalculator*)p);
   }
   static void deleteArray_BIGCALGeometryCalculator(void *p) {
      delete [] ((::BIGCALGeometryCalculator*)p);
   }
   static void destruct_BIGCALGeometryCalculator(void *p) {
      typedef ::BIGCALGeometryCalculator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BIGCALGeometryCalculator

/********************************************************
* geodict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtablegeodict();

extern "C" void G__set_cpp_environmentgeodict() {
   G__add_compiledheader("TObject.h");
   G__add_compiledheader("TMemberInspector.h");
   G__add_compiledheader("BIGCALGeometryCalculator.hh");
   G__cpp_reset_tagtablegeodict();
}
#include <new>
extern "C" int G__cpp_dllrevgeodict() {
   return(30051515);
}

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BIGCALGeometryCalculator */
static int G__geodict_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BIGCALGeometryCalculator* p = NULL;
   long gvp = G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
      if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new BIGCALGeometryCalculator[n];
      } else {
         p = new((void*) gvp) BIGCALGeometryCalculator[n];
      }
   } else {
      if ((gvp == G__PVOID) || (gvp == 0)) {
         p = new BIGCALGeometryCalculator;
      } else {
         p = new((void*) gvp) BIGCALGeometryCalculator;
      }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__geodictLN_BIGCALGeometryCalculator);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__geodict_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__letdouble(result7, 100, (double) ((BIGCALGeometryCalculator*) G__getstructoffset())->getProtCellX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__geodict_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__letdouble(result7, 100, (double) ((BIGCALGeometryCalculator*) G__getstructoffset())->getProtCellY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__geodict_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__letdouble(result7, 100, (double) ((BIGCALGeometryCalculator*) G__getstructoffset())->getRCSCellX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__geodict_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__letdouble(result7, 100, (double) ((BIGCALGeometryCalculator*) G__getstructoffset())->getRCSCellY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__geodict_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__letdouble(result7, 100, (double) ((BIGCALGeometryCalculator*) G__getstructoffset())->getRCSCellX_BCCoords((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__geodict_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__letdouble(result7, 100, (double) ((BIGCALGeometryCalculator*) G__getstructoffset())->getRCSCellY_BCCoords((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__geodict_205_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__letdouble(result7, 100, (double) ((BIGCALGeometryCalculator*) G__getstructoffset())->getProtCellX_BCCoords((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__geodict_205_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__letdouble(result7, 100, (double) ((BIGCALGeometryCalculator*) G__getstructoffset())->getProtCellY_BCCoords((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__geodict_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BIGCALGeometryCalculator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BIGCALGeometryCalculator(*(BIGCALGeometryCalculator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__geodictLN_BIGCALGeometryCalculator);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BIGCALGeometryCalculator G__TBIGCALGeometryCalculator;
static int G__geodict_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   long gvp = G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
      return(1);
   }
   if (n) {
      if (gvp == G__PVOID) {
         delete[] (BIGCALGeometryCalculator*) soff;
      } else {
         G__setgvp(G__PVOID);
         for (int i = n - 1; i >= 0; --i) {
            ((BIGCALGeometryCalculator*) (soff+(sizeof(BIGCALGeometryCalculator)*i)))->~G__TBIGCALGeometryCalculator();
         }
         G__setgvp(gvp);
      }
   } else {
      if (gvp == G__PVOID) {
         delete (BIGCALGeometryCalculator*) soff;
      } else {
         G__setgvp(G__PVOID);
         ((BIGCALGeometryCalculator*) (soff))->~G__TBIGCALGeometryCalculator();
         G__setgvp(gvp);
      }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__geodict_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BIGCALGeometryCalculator* dest = (BIGCALGeometryCalculator*) G__getstructoffset();
   *dest = *(BIGCALGeometryCalculator*) libp->para[0].ref;
   const BIGCALGeometryCalculator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BIGCALGeometryCalculator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncgeodict {
public:
   G__Sizep2memfuncgeodict(): p(&G__Sizep2memfuncgeodict::sizep2memfunc) {}
   size_t sizep2memfunc() {
      return(sizeof(p));
   }
private:
   size_t (G__Sizep2memfuncgeodict::*p)();
};

size_t G__get_sizep2memfuncgeodict()
{
   G__Sizep2memfuncgeodict a;
   G__setsizep2memfunc((int)a.sizep2memfunc());
   return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

/* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancegeodict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablegeodict() {

   /* Setting up typedef entry */
}

/*********************************************************
* Data Member information setup/
*********************************************************/

/* Setting up class,struct,union tag member variable */

/* BIGCALGeometryCalculator */
static void G__setup_memvarBIGCALGeometryCalculator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__geodictLN_BIGCALGeometryCalculator));
   {
      BIGCALGeometryCalculator *p;
      p=(BIGCALGeometryCalculator*)0x1000;
      if (p) { }
      G__memvar_setup((void*)((long)(&p->rcsXSize)-(long)(p)),100,0,0,-1,-1,-1,1,"rcsXSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->rcsYSize)-(long)(p)),100,0,0,-1,-1,-1,1,"rcsYSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->protXSize)-(long)(p)),100,0,0,-1,-1,-1,1,"protXSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->protYSize)-(long)(p)),100,0,0,-1,-1,-1,1,"protYSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->rcsProtYSeparation)-(long)(p)),100,0,0,-1,-1,-1,1,"rcsProtYSeparation=",0,"center to center;");
      G__memvar_setup((void*)((long)(&p->rcsProtXSeparation)-(long)(p)),100,0,0,-1,-1,-1,1,"rcsProtXSeparation=",0,"horizontal displacement");
      G__memvar_setup((void*)((long)(&p->rcsCellSize)-(long)(p)),100,0,0,-1,-1,-1,1,"rcsCellSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->protCellSize)-(long)(p)),100,0,0,-1,-1,-1,1,"protCellSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->rcsCellZSize)-(long)(p)),100,0,0,-1,-1,-1,1,"rcsCellZSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->protCellZSize)-(long)(p)),100,0,0,-1,-1,-1,1,"protCellZSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->bcVerticalOffset)-(long)(p)),100,0,0,-1,-1,-1,1,"bcVerticalOffset=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->bcYSize)-(long)(p)),100,0,0,-1,-1,-1,1,"bcYSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->bcXSize)-(long)(p)),100,0,0,-1,-1,-1,1,"bcXSize=",0,(char*)NULL);
      G__memvar_setup((void*)((long)(&p->bigcalFace)-(long)(p)),100,0,0,-1,-1,-1,1,"bigcalFace=",0,(char*)NULL);
      G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"arcsCellSize=",0,(char*)NULL);
      G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"aprotCellSize=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvargeodict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBIGCALGeometryCalculator(void) {
   /* BIGCALGeometryCalculator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__geodictLN_BIGCALGeometryCalculator));
   G__memfunc_setup("BIGCALGeometryCalculator",2296,G__geodict_205_0_1, 105, G__get_linked_tagnum(&G__geodictLN_BIGCALGeometryCalculator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getProtCellX",1213,G__geodict_205_0_2, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "coords centered in protvino frame", (void*) NULL, 0);
   G__memfunc_setup("getProtCellY",1214,G__geodict_205_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRCSCellX",1024,G__geodict_205_0_4, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "coords centered in rcs frame", (void*) NULL, 0);
   G__memfunc_setup("getRCSCellY",1025,G__geodict_205_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRCSCellX_BCCoords",1870,G__geodict_205_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "coords centered in BC frame", (void*) NULL, 0);
   G__memfunc_setup("getRCSCellY_BCCoords",1871,G__geodict_205_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getProtCellX_BCCoords",2059,G__geodict_205_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "coords centered in BC frame", (void*) NULL, 0);
   G__memfunc_setup("getProtCellY_BCCoords",2060,G__geodict_205_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BIGCALGeometryCalculator", 2296, G__geodict_205_0_10, (int) ('i'),
                    G__get_linked_tagnum(&G__geodictLN_BIGCALGeometryCalculator), -1, 0, 1, 1, 1, 0, "u 'BIGCALGeometryCalculator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BIGCALGeometryCalculator", 2422, G__geodict_205_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__geodict_205_0_12, (int) ('u'), G__get_linked_tagnum(&G__geodictLN_BIGCALGeometryCalculator), -1, 1, 1, 1, 1, 0, "u 'BIGCALGeometryCalculator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncgeodict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalgeodict() {
   G__cpp_setup_global0();
   G__cpp_setup_global1();
   G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcgeodict() {
   G__cpp_setup_func0();
   G__cpp_setup_func1();
   G__cpp_setup_func2();
   G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__geodictLN_BIGCALGeometryCalculator = { "BIGCALGeometryCalculator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablegeodict() {
   G__geodictLN_BIGCALGeometryCalculator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablegeodict() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum(&G__geodictLN_BIGCALGeometryCalculator),sizeof(BIGCALGeometryCalculator),-1,1280,(char*)NULL,G__setup_memvarBIGCALGeometryCalculator,G__setup_memfuncBIGCALGeometryCalculator);
}
extern "C" void G__cpp_setupgeodict(void) {
   G__check_setup_version(30051515,"G__cpp_setupgeodict()");
   G__set_cpp_environmentgeodict();
   G__cpp_setup_tagtablegeodict();

   G__cpp_setup_inheritancegeodict();

   G__cpp_setup_typetablegeodict();

   G__cpp_setup_memvargeodict();

   G__cpp_setup_memfuncgeodict();
   G__cpp_setup_globalgeodict();
   G__cpp_setup_funcgeodict();

   if (0==G__getsizep2memfunc()) G__get_sizep2memfuncgeodict();
   return;
}
class G__cpp_setup_initgeodict {
public:
   G__cpp_setup_initgeodict() {
      G__add_setup_func("geodict",(G__incsetup)(&G__cpp_setupgeodict));
      G__call_setup_funcs();
   }
   ~G__cpp_setup_initgeodict() {
      G__remove_setup_func("geodict");
   }
};
G__cpp_setup_initgeodict G__cpp_setup_initializergeodict;

